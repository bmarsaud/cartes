---
const { elements, initialValue } = Astro.props;
---
<div class="flex flex-col items-center mt-1" x-data={ `{value: ${initialValue}}` }>
    <input type="range" x-model="value" @input="$dispatch('slider-changed', { value })" min="0" max={ elements.length - 1 } step="1" class="h-1 mb-2 appearance-none bg-black [&::-webkit-slider-thumb]:appearance-none [&::-webkit-slider-thumb]:h-5 [&::-webkit-slider-thumb]:w-3 [&::-webkit-slider-thumb]:bg-[#fffaea] [&::-webkit-slider-thumb]:border-3 [&::-webkit-slider-thumb]:cursor-pointer" style={ `width: ${ (elements.length - 1) / elements.length * 100}%;` }>
    <div class="grid items-center" style={`grid-template-columns: repeat(${elements.length}, minmax(0, 1fr));`}>
        { elements.map((element: string) => <div class="text-center text-xs select-none">{ element }</div>) }
    </div>
</div>
