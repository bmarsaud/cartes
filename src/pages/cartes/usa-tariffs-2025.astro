---
import MapLayout from "../../layouts/MapLayout.astro";
import Slider from "../../components/Slider.astro";
---
<MapLayout title="L'évolution des nouveaux droits de douane américains" date="17 avril 2025" description="Le mercredi 2 avril 2025, le président américain Donald Trump annonce la mise en place de droits de douanes « réciproques » particulièrement élevés qui bouleversent l'économie mondiale. Une saga qui commence deux mois plus tôt et qui mène à une escalade, notamment avec la Chine.">
    <div id="map" class="h-full w-full relative">
        <div id="tooltip" class="absolute left-0 top-0 z-20 bg-[#fffaea] border p-2 pointer-events-none" style="display: none;">
            <h3 class="font-[600] border-b mb-1" id="country-name">Country</h3>
            <p class="text-sm">Les frais de douanes appliqués<br />sont de <span class="font-[700]" id="tariff">20 %</span></p>
        </div>
        <div class="absolute left-4 bottom-4 w-1/4 flex flex-col gap-4 z-20">
            <div class="bg-[#fffaea] border p-2">
                <p id="tariff-description"></p>
            </div>
            <div class="bg-[#fffaea] border p-2" x-data="{}" @slider-changed="loadTariff($event.detail.value)">
                <h3 class="font-[600]">Date</h3>
                <Slider elements={["1er février", "3 février", "4 mars", "6 mars", "2 avril", "8 avril", "9 avril"]} initialValue="4"></Slider>
            </div>
        </div>
        <div class="absolute right-4 bottom-4 z-20">
            <div class="bg-[#fffaea] border p-2 flex flex-col gap-1">
                <h3 class="font-[600]">Légende</h3>
                <div class="text-xs">Droits de douane appliqué aux produits en provance du pays</div>
                <div class="w-full h-6 border" style="background: linear-gradient(to right,#FFE7B7, #F2B097, #E26850, #B41F21, #631410, #900C3F);"></div>
                <div class="flex justify-between">
                    <span>10%</span>
                    <span>20%</span>
                    <span>30%</span>
                    <span>150%</span>
                </div>
            </div>
        </div>
    </div>
</MapLayout>

<script>
    import 'ol/ol.css';
    import Map from 'ol/Map';
    import View from 'ol/View';
    import VectorLayer from 'ol/layer/Vector';
    import VectorSource from 'ol/source/Vector';
    import GeoJSON from 'ol/format/GeoJSON';
    import proj4 from 'proj4';
    import {register} from 'ol/proj/proj4';
    import {Fill, Stroke, Style} from "ol/style";
    import {interpolateRgbBasis} from 'd3-interpolate';
    import Feature from "ol/Feature";

    import countries from "i18n-iso-countries";
    import fr from "i18n-iso-countries/langs/fr.json";
    countries.registerLocale(fr);

    proj4.defs("EPSG:54030","+proj=robin +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs +type=crs");
    register(proj4);

    let tariffDescriptionElem = document.getElementById('tariff-description');

    loadMap();
    async function loadMap() {
        // data
        let tariffsAtDate = await fetch('/data/usa-tariffs-2025/tariffs.json').then(res => res.json());
        let europeanUnion = await fetch('/data/usa-tariffs-2025/european-union.json').then(res => res.json());

        // mixing all european union countries
        for (let elem of tariffsAtDate) {
            for (let country of europeanUnion) {
                elem.tariffs[country] = elem.tariffs['EUU'];
            }
        }

        let currentTariff = tariffsAtDate[4].tariffs;
        tariffDescriptionElem.innerText = tariffsAtDate[4].description;

        const countriesSource = new VectorSource({
            url: 'https://raw.githubusercontent.com/johan/world.geo.json/refs/heads/master/countries.geo.json',
            format: new GeoJSON(),
        });

        // colors
        const colorPalette = ["#FFE7B7", "#F2B097", "#E26850", "#B41F21", "#631410", "#900C3F"];
        const unknownColor = "#ddd";
        const usaColor = "#aaa";
        const minValue = 10;
        const maxValue = 60;

        function getFeatureStyle (feature: Feature, resolution?: number) {
            let country: string = feature.getId() as string;
            let color = unknownColor;
            if (country == 'USA') {
                color = usaColor;
            } else {
                let tariff = currentTariff[country];
                if (tariff) {
                    color = tariff < 120 ? interpolateRgbBasis(colorPalette)((tariff - minValue) / (maxValue - minValue)) : '#301934';
                }
            }

            return new Style({
                stroke: new Stroke(),
                fill: new Fill({
                    color
                })
            })
        }

        const map = new Map({
            target: 'map',
            layers: [
                new VectorLayer({
                    source: countriesSource,
                    style: getFeatureStyle
                })
            ],
            view: new View({
                projection: 'EPSG:54030',
                center: [0, 0],
                zoom: 0,
            }),
        });

        countriesSource.on('featuresloadend', function() {
            map.getView().fit(countriesSource.getExtent());
        });

        // hover
        let tooltipElem = document.getElementById('tooltip');
        let countryNameElem = document.getElementById('country-name');
        let tariffElem = document.getElementById('tariff');
        let selectedCountry: Feature | null = null;
        map.on('pointermove', function (evt) {
            if (selectedCountry) {
                selectedCountry.setStyle(undefined);
                selectedCountry = null;
            }

            map.forEachFeatureAtPixel(evt.pixel, function (feature: Feature) {
                if (currentTariff[feature.getId()]) {
                    selectedCountry = feature;

                    let featureStyle: Style = getFeatureStyle(feature);
                    featureStyle.getStroke()?.setWidth(3);
                    feature.setStyle(featureStyle);

                    return true;
                }
                return false;
            });

            if (selectedCountry) {
                tooltipElem.style.left = evt.pixel[0] + 10 + 'px';
                tooltipElem.style.top = evt.pixel[1] + 10 + 'px';
                tooltipElem.style.display = 'block';

                countryNameElem.innerText = countries.getName(selectedCountry.getId(), 'fr');
                tariffElem.innerText = currentTariff[selectedCountry.getId()] + ' %'
            } else {
                tooltipElem.style.display = 'none';
            }
        });

        // date slider
        window.loadTariff = function (value: number) {
            currentTariff = tariffsAtDate[value].tariffs;
            tariffDescriptionElem.innerText = tariffsAtDate[value].description;
            countriesSource.refresh();
        }
    }
</script>
